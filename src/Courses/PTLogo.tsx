import React, { useEffect, useState } from 'react'
import { useSprings, a } from '@react-spring/web'
import { sConfigs } from '../utils'
import { useTheme } from 'emotion-theming'
import { css } from '@emotion/core'
import { Theme } from '../theme/types'
import { alpha } from '../theme'
import { useUiStore } from '../appState'
import shallow from 'zustand/shallow'
// import { sConfigs } from '../utils'

export const PATH_PR = [
  //   p:
  'M 9.8 61.201 L 9.8 7.201 A 22.402 22.402 0 0 0 6.005 5.7 Q 4.074 5.121 1.817 4.755 A 42.97 42.97 0 0 0 0 4.501 L 0.5 0.901 L 26.2 0.901 Q 37.5 0.901 42.95 5.651 A 15.338 15.338 0 0 1 47.806 13.923 A 23.764 23.764 0 0 1 48.4 19.401 Q 48.4 26.41 45.311 30.626 A 13.258 13.258 0 0 1 41.6 34.051 A 23.604 23.604 0 0 1 35.77 36.599 Q 30.206 38.248 22.312 38.3 A 78.412 78.412 0 0 1 21.8 38.301 L 18.6 38.301 L 18.6 61.201 A 15.429 15.429 0 0 0 21.167 62.354 Q 23.847 63.298 27.707 63.824 A 54.583 54.583 0 0 0 28.3 63.901 L 27.9 67.601 L 0.1 67.601 L 0.7 63.901 A 34.602 34.602 0 0 0 4.347 63.266 Q 7.569 62.514 9.8 61.201 Z M 18.6 5.701 L 18.6 33.801 L 21.8 33.801 A 31.984 31.984 0 0 0 26.791 33.437 Q 29.385 33.026 31.483 32.153 A 14.546 14.546 0 0 0 34.8 30.251 A 11.273 11.273 0 0 0 38.805 24.085 Q 39.326 22.172 39.391 19.867 A 23.606 23.606 0 0 0 39.4 19.201 A 20.163 20.163 0 0 0 38.696 13.621 Q 36.891 7.364 30.459 5.702 A 21.062 21.062 0 0 0 25.2 5.101 Q 22.1 5.101 18.6 5.701 Z',
  //   r:
  'M 63.1 61.201 L 63.1 7.201 A 16.515 16.515 0 0 0 60.223 5.932 Q 57.336 4.95 53.3 4.501 L 53.8 0.901 L 79.5 0.901 A 43.688 43.688 0 0 1 87.858 1.627 Q 101.242 4.249 102.308 16.338 A 24.632 24.632 0 0 1 102.4 18.501 Q 102.4 25.101 99.05 29.201 Q 96.24 32.641 90.791 34.391 A 30.016 30.016 0 0 1 88.6 35.001 A 11.005 11.005 0 0 1 91.049 37.134 A 13.622 13.622 0 0 1 91.95 38.301 A 24.012 24.012 0 0 1 93.12 40.189 Q 93.969 41.701 94.8 43.601 L 102.7 61.201 A 12.952 12.952 0 0 0 105.41 62.55 Q 107.809 63.436 111.1 63.801 L 110.5 67.601 L 95.4 67.601 L 86.7 45.301 Q 85.392 41.993 84.351 40.224 A 10.907 10.907 0 0 0 83.75 39.301 Q 82.5 37.601 80.5 37.051 A 10.797 10.797 0 0 0 79.254 36.798 Q 77.911 36.596 75.92 36.532 A 62.544 62.544 0 0 0 73.9 36.501 L 71.9 36.501 L 71.9 61.201 A 12.739 12.739 0 0 0 73.346 61.941 Q 74.363 62.386 75.6 62.751 A 23.564 23.564 0 0 0 77.131 63.143 Q 78.988 63.557 81.6 63.901 L 81.1 67.601 L 53.4 67.601 L 53.9 63.901 A 35.411 35.411 0 0 0 57.604 63.266 Q 60.869 62.514 63.1 61.201 Z M 71.9 5.701 L 71.9 31.901 L 75 31.901 Q 84.4 31.901 88.9 28.551 A 10.772 10.772 0 0 0 93.024 21.994 A 17.074 17.074 0 0 0 93.4 18.301 A 19.561 19.561 0 0 0 93.053 14.494 Q 92.612 12.274 91.611 10.568 A 9.971 9.971 0 0 0 89.85 8.351 Q 86.3 5.001 79.4 5.001 Q 76 5.001 71.9 5.701 Z',
  //   o:
  'M 130.799 67.566 A 38.527 38.527 0 0 0 138.6 68.301 A 44.716 44.716 0 0 0 141.481 68.211 Q 145.674 67.94 149.101 66.857 A 19.891 19.891 0 0 0 159.55 59.551 Q 165.9 50.801 165.9 34.301 Q 165.9 24.445 163.661 17.321 A 29.668 29.668 0 0 0 159.55 8.851 Q 153.2 0.001 138.6 0.001 Q 123.9 0.001 117.55 8.801 A 28.59 28.59 0 0 0 113.829 16.067 Q 111.2 23.519 111.2 34.201 Q 111.2 50.701 117.55 59.501 A 18.928 18.928 0 0 0 122.914 64.518 Q 126.295 66.633 130.799 67.566 Z M 138.6 63.401 A 20.934 20.934 0 0 0 142.852 62.996 Q 146.916 62.153 149.45 59.551 A 18.057 18.057 0 0 0 153.249 53.613 A 24.568 24.568 0 0 0 154.5 49.401 A 57.057 57.057 0 0 0 155.342 43.87 Q 155.657 40.884 155.755 37.481 A 109.983 109.983 0 0 0 155.8 34.301 A 102.983 102.983 0 0 0 155.617 27.992 Q 155.427 24.896 155.038 22.197 A 52.065 52.065 0 0 0 154.5 19.101 A 23.971 23.971 0 0 0 152.856 13.966 A 18.079 18.079 0 0 0 149.45 8.901 A 12.044 12.044 0 0 0 143.994 5.695 Q 142.055 5.134 139.725 5.027 A 24.422 24.422 0 0 0 138.6 5.001 A 20.698 20.698 0 0 0 134.296 5.421 Q 131.611 5.992 129.583 7.339 A 11.535 11.535 0 0 0 127.7 8.901 A 18.472 18.472 0 0 0 123.689 15.288 A 24.508 24.508 0 0 0 122.6 19.051 A 55.935 55.935 0 0 0 121.758 24.567 Q 121.472 27.286 121.364 30.369 A 110.164 110.164 0 0 0 121.3 34.201 A 85.823 85.823 0 0 0 121.647 42.183 Q 122.409 50.323 124.85 55.651 A 12.442 12.442 0 0 0 133.716 62.87 A 20.95 20.95 0 0 0 138.6 63.401 Z',
  //   j:
  'M 178.5 67.501 L 178.5 7.201 A 22.402 22.402 0 0 0 174.705 5.7 Q 172.774 5.121 170.517 4.755 A 42.97 42.97 0 0 0 168.7 4.501 L 169.2 0.901 L 196.9 0.901 L 196.4 4.501 Q 190.8 5.201 187.3 7.201 L 187.3 66.001 A 24.716 24.716 0 0 1 186.662 71.784 A 16.652 16.652 0 0 1 182.25 79.851 A 24.585 24.585 0 0 1 176.56 84.025 Q 173.853 85.497 170.512 86.597 A 48.677 48.677 0 0 1 167.8 87.401 L 166.7 84.401 A 27.932 27.932 0 0 0 171.415 81.663 A 21.354 21.354 0 0 0 175.3 78.051 Q 178.5 74.201 178.5 67.501 Z',
  //   e:
  'M 210.7 61.201 L 210.7 7.201 A 20.698 20.698 0 0 0 207.249 5.791 Q 205.508 5.245 203.463 4.877 A 42.137 42.137 0 0 0 200.9 4.501 L 201.4 0.901 L 246 0.901 L 246.8 16.101 A 7.616 7.616 0 0 1 244.372 16.593 A 8.784 8.784 0 0 1 244 16.601 A 3.711 3.711 0 0 1 243.679 16.585 Q 243.363 16.558 242.924 16.481 A 17.7 17.7 0 0 1 242.5 16.401 A 34.331 34.331 0 0 0 241.417 12.218 Q 240.734 10.163 239.833 8.516 A 15.655 15.655 0 0 0 238.3 6.201 L 219.5 6.201 L 219.5 31.201 L 230.8 30.701 A 4.205 4.205 0 0 0 233.906 29.175 A 5.62 5.62 0 0 0 234.2 28.801 A 11.824 11.824 0 0 0 235.19 27.141 Q 235.866 25.782 236.4 24.001 L 239.6 24.001 L 239.6 43.801 L 236.4 43.801 Q 235.2 39.501 234.1 38.001 A 3.631 3.631 0 0 0 232.33 36.724 Q 231.535 36.443 230.5 36.401 L 219.5 35.801 L 219.5 61.801 L 240.8 61.801 A 21.002 21.002 0 0 0 243.064 57.656 Q 243.914 55.618 244.525 53.174 A 42.784 42.784 0 0 0 245.1 50.501 Q 246.3 50.301 247 50.301 A 4.738 4.738 0 0 1 247.271 50.311 Q 247.714 50.337 248.551 50.435 A 68.814 68.814 0 0 1 249.1 50.501 L 248.2 67.601 L 200.9 67.601 L 201.5 63.901 A 35.117 35.117 0 0 0 205.739 63.137 A 40.039 40.039 0 0 0 206.85 62.851 Q 209.022 62.259 210.165 61.573 A 4.514 4.514 0 0 0 210.7 61.201 Z',
  //   k:
  'M 298 54.101 L 301.5 57.901 Q 298.735 61.291 294.059 64.283 A 47.261 47.261 0 0 1 292.9 65.001 A 23.097 23.097 0 0 1 283.851 68.068 A 29.419 29.419 0 0 1 280.1 68.301 A 32.644 32.644 0 0 1 272.581 67.491 Q 267.225 66.223 263.505 62.972 A 19.536 19.536 0 0 1 260.75 60.001 A 25.774 25.774 0 0 1 257.065 52.847 Q 254.713 46.029 254.518 36.036 A 93.958 93.958 0 0 1 254.5 34.201 A 76.336 76.336 0 0 1 255.002 25.126 Q 256.194 15.201 260.216 9.286 A 21.68 21.68 0 0 1 260.85 8.401 A 20.315 20.315 0 0 1 272.647 0.863 Q 276.172 0.001 280.4 0.001 Q 286.1 0.001 290.65 1.701 A 20.537 20.537 0 0 1 294.191 3.402 A 14.671 14.671 0 0 1 297.75 6.401 Q 300.3 9.401 300.3 13.201 A 10.648 10.648 0 0 1 299.957 15.964 A 8.369 8.369 0 0 1 298.6 18.801 Q 296.9 21.101 294.5 21.101 Q 292.5 21.101 290.9 20.001 Q 289.3 18.901 288.7 17.201 A 11.913 11.913 0 0 0 289.801 15.398 Q 290.325 14.321 290.506 13.281 A 6.316 6.316 0 0 0 290.6 12.201 A 5.489 5.489 0 0 0 288.68 7.924 A 7.715 7.715 0 0 0 287.8 7.251 Q 285 5.401 280.4 5.401 Q 272.3 5.401 268.4 12.451 A 24.611 24.611 0 0 0 266.302 17.752 Q 264.77 23.242 264.541 31.285 A 102.248 102.248 0 0 0 264.5 34.201 A 86.939 86.939 0 0 0 264.796 41.652 Q 265.568 50.587 268.35 55.501 A 13.433 13.433 0 0 0 272.35 60.013 Q 274.971 61.834 278.519 62.206 A 18.049 18.049 0 0 0 280.4 62.301 Q 285.6 62.301 290.55 59.851 A 27.452 27.452 0 0 0 293.918 57.894 Q 296.438 56.164 298 54.101 Z',
  //   t:
  'M 327.3 61.201 L 327.3 5.401 A 188.303 188.303 0 0 0 321.848 5.546 Q 317.575 5.726 314.2 6.101 A 18.158 18.158 0 0 0 311.906 10.465 A 21.358 21.358 0 0 0 311.45 11.851 A 30.578 30.578 0 0 0 310.784 14.559 Q 310.519 15.913 310.432 17.132 A 17.14 17.14 0 0 0 310.4 17.701 A 7.373 7.373 0 0 1 309.951 17.75 Q 309.457 17.789 308.752 17.798 A 34.436 34.436 0 0 1 308.3 17.801 Q 306.7 17.801 306 17.701 L 306 0.501 Q 319.8 0.901 331.6 0.901 Q 339.5 0.901 346.85 0.751 Q 354.2 0.601 357.3 0.501 L 357.3 17.701 A 7.373 7.373 0 0 1 356.851 17.75 Q 356.357 17.789 355.652 17.798 A 34.436 34.436 0 0 1 355.2 17.801 Q 353.964 17.801 353.203 17.733 A 8.66 8.66 0 0 1 352.9 17.701 A 34.703 34.703 0 0 0 352.113 12.901 Q 351.158 8.956 349.3 6.201 Q 342.8 5.501 336.1 5.401 L 336.1 61.201 A 17.746 17.746 0 0 0 338.837 62.377 Q 341.766 63.376 345.9 63.901 L 345.4 67.601 L 317.6 67.601 L 318.2 63.901 A 35.783 35.783 0 0 0 321.624 63.337 Q 325.1 62.576 327.3 61.201 Z',
  //   s:
  'M 361.3 63.101 L 361.3 46.701 L 366.2 46.201 A 117.129 117.129 0 0 0 366.671 49.59 Q 367.081 52.239 367.55 54.301 Q 368.3 57.601 369.8 61.001 A 24.947 24.947 0 0 0 376.965 63.029 A 31.971 31.971 0 0 0 381.2 63.301 A 16.516 16.516 0 0 0 385.098 62.865 A 11.691 11.691 0 0 0 390.25 60.201 A 10.163 10.163 0 0 0 393.471 54.278 A 14.923 14.923 0 0 0 393.7 51.601 Q 393.7 47.701 391.75 45.001 Q 389.8 42.301 386.95 40.651 Q 385.035 39.543 382.24 38.276 A 104.794 104.794 0 0 0 379.3 37.001 A 91.62 91.62 0 0 1 375.524 35.297 Q 372.606 33.895 370.45 32.551 A 18.79 18.79 0 0 1 365.079 27.45 A 21.94 21.94 0 0 1 364.6 26.751 A 14.156 14.156 0 0 1 362.6 21.818 A 20.106 20.106 0 0 1 362.2 17.701 Q 362.2 9.601 367.65 4.801 A 18.068 18.068 0 0 1 374.64 1.056 Q 377.35 0.265 380.585 0.067 A 36.312 36.312 0 0 1 382.8 0.001 A 26.025 26.025 0 0 1 390.216 1.039 A 24.024 24.024 0 0 1 392.15 1.701 A 20.719 20.719 0 0 1 395.723 3.488 A 15.341 15.341 0 0 1 399.05 6.301 A 10.66 10.66 0 0 1 400.859 9.102 A 8.967 8.967 0 0 1 401.6 12.701 A 12.017 12.017 0 0 1 401.394 15.037 Q 400.664 18.703 397.351 19.062 A 6.963 6.963 0 0 1 396.6 19.101 A 12.179 12.179 0 0 1 395.28 19.035 Q 394.64 18.965 394.11 18.821 A 4.652 4.652 0 0 1 393.05 18.401 A 6.271 6.271 0 0 1 391.654 17.323 A 8.395 8.395 0 0 1 390.8 16.301 A 6.933 6.933 0 0 0 392.899 11.295 A 8.51 8.51 0 0 0 392.9 11.201 A 4.585 4.585 0 0 0 391.505 7.903 A 7.551 7.551 0 0 0 390.2 6.851 Q 388.192 5.55 385.023 5.216 A 22.224 22.224 0 0 0 382.7 5.101 A 19.501 19.501 0 0 0 379.289 5.381 Q 376.066 5.954 373.95 7.701 Q 370.8 10.301 370.8 15.201 A 11.56 11.56 0 0 0 371.117 17.977 A 8.584 8.584 0 0 0 372.65 21.201 Q 374.5 23.601 377.2 25.151 Q 379.777 26.63 384.266 28.52 A 134.051 134.051 0 0 0 384.7 28.701 Q 388.874 30.5 391.909 32.144 A 48.614 48.614 0 0 1 394.1 33.401 A 18.593 18.593 0 0 1 399.041 37.851 A 22.682 22.682 0 0 1 400.25 39.551 Q 402.8 43.501 402.8 49.501 A 20.949 20.949 0 0 1 402.021 55.374 A 15.378 15.378 0 0 1 396.5 63.451 Q 390.2 68.301 379.8 68.301 A 33.616 33.616 0 0 1 371.522 67.233 A 39.484 39.484 0 0 1 369.15 66.551 A 59.21 59.21 0 0 1 366.326 65.571 Q 363.025 64.323 361.3 63.101 Z',
]

export const PATH_TH = [
  //T
  'M 21.3 61.201 L 21.3 5.401 A 188.303 188.303 0 0 0 15.848 5.546 Q 11.575 5.726 8.2 6.101 A 18.158 18.158 0 0 0 5.906 10.465 A 21.358 21.358 0 0 0 5.45 11.851 A 30.578 30.578 0 0 0 4.784 14.559 Q 4.519 15.913 4.432 17.132 A 17.14 17.14 0 0 0 4.4 17.701 A 7.373 7.373 0 0 1 3.951 17.75 Q 3.457 17.789 2.752 17.798 A 34.436 34.436 0 0 1 2.3 17.801 Q 0.7 17.801 0 17.701 L 0 0.501 Q 13.8 0.901 25.6 0.901 Q 33.5 0.901 40.85 0.751 Q 48.2 0.601 51.3 0.501 L 51.3 17.701 A 7.373 7.373 0 0 1 50.851 17.75 Q 50.357 17.789 49.652 17.798 A 34.436 34.436 0 0 1 49.2 17.801 Q 47.964 17.801 47.203 17.733 A 8.66 8.66 0 0 1 46.9 17.701 A 34.703 34.703 0 0 0 46.113 12.901 Q 45.158 8.956 43.3 6.201 Q 36.8 5.501 30.1 5.401 L 30.1 61.201 A 17.746 17.746 0 0 0 32.837 62.377 Q 35.766 63.376 39.9 63.901 L 39.4 67.601 L 11.6 67.601 L 12.2 63.901 A 35.783 35.783 0 0 0 15.624 63.337 Q 19.1 62.576 21.3 61.201 Z',
  //H
  'M 65.8 61.201 L 65.8 7.201 A 23.755 23.755 0 0 0 60.442 5.199 A 30.851 30.851 0 0 0 56.5 4.501 L 57 0.901 L 84.4 0.901 L 83.8 4.501 A 33.909 33.909 0 0 0 79.628 5.284 Q 76.797 6.014 74.6 7.201 L 74.6 30.801 L 102.1 30.801 L 102.1 7.201 A 22.402 22.402 0 0 0 98.305 5.7 Q 96.374 5.121 94.117 4.755 A 42.97 42.97 0 0 0 92.3 4.501 L 92.8 0.901 L 120.1 0.901 L 119.6 4.501 A 26.027 26.027 0 0 0 114.436 5.651 A 21.486 21.486 0 0 0 110.9 7.201 L 110.9 61.201 Q 113.394 62.668 117.178 63.436 A 37.057 37.057 0 0 0 120.1 63.901 L 119.7 67.601 L 92.3 67.601 L 92.9 63.901 A 35.411 35.411 0 0 0 96.604 63.266 Q 99.869 62.514 102.1 61.201 L 102.1 35.901 L 74.6 35.901 L 74.6 61.201 A 17.836 17.836 0 0 0 77.666 62.518 Q 79.274 63.05 81.204 63.421 A 41.772 41.772 0 0 0 84.4 63.901 L 83.9 67.601 L 56.5 67.601 L 57.1 63.901 Q 59.7 63.601 61.75 63.001 A 16.865 16.865 0 0 0 64.985 61.664 A 19.468 19.468 0 0 0 65.8 61.201 Z',
  //E
  'M 135.9 61.201 L 135.9 7.201 A 20.698 20.698 0 0 0 132.449 5.791 Q 130.708 5.245 128.663 4.877 A 42.137 42.137 0 0 0 126.1 4.501 L 126.6 0.901 L 171.2 0.901 L 172 16.101 A 7.616 7.616 0 0 1 169.572 16.593 A 8.784 8.784 0 0 1 169.2 16.601 A 3.711 3.711 0 0 1 168.879 16.585 Q 168.563 16.558 168.124 16.481 A 17.7 17.7 0 0 1 167.7 16.401 A 34.331 34.331 0 0 0 166.617 12.218 Q 165.934 10.163 165.033 8.516 A 15.655 15.655 0 0 0 163.5 6.201 L 144.7 6.201 L 144.7 31.201 L 156 30.701 A 4.205 4.205 0 0 0 159.106 29.175 A 5.62 5.62 0 0 0 159.4 28.801 A 11.824 11.824 0 0 0 160.39 27.141 Q 161.066 25.782 161.6 24.001 L 164.8 24.001 L 164.8 43.801 L 161.6 43.801 Q 160.4 39.501 159.3 38.001 A 3.631 3.631 0 0 0 157.53 36.724 Q 156.735 36.443 155.7 36.401 L 144.7 35.801 L 144.7 61.801 L 166 61.801 A 21.002 21.002 0 0 0 168.264 57.656 Q 169.114 55.618 169.725 53.174 A 42.784 42.784 0 0 0 170.3 50.501 Q 171.5 50.301 172.2 50.301 A 4.738 4.738 0 0 1 172.471 50.311 Q 172.914 50.337 173.751 50.435 A 68.814 68.814 0 0 1 174.3 50.501 L 173.4 67.601 L 126.1 67.601 L 126.7 63.901 A 35.117 35.117 0 0 0 130.939 63.137 A 40.039 40.039 0 0 0 132.05 62.851 Q 134.222 62.259 135.365 61.573 A 4.514 4.514 0 0 0 135.9 61.201 Z',
  //O
  'M 199.299 67.566 A 38.527 38.527 0 0 0 207.1 68.301 A 44.716 44.716 0 0 0 209.981 68.211 Q 214.174 67.94 217.601 66.857 A 19.891 19.891 0 0 0 228.05 59.551 Q 234.4 50.801 234.4 34.301 Q 234.4 24.445 232.161 17.321 A 29.668 29.668 0 0 0 228.05 8.851 Q 221.7 0.001 207.1 0.001 Q 192.4 0.001 186.05 8.801 A 28.59 28.59 0 0 0 182.329 16.067 Q 179.7 23.519 179.7 34.201 Q 179.7 50.701 186.05 59.501 A 18.928 18.928 0 0 0 191.414 64.518 Q 194.795 66.633 199.299 67.566 Z M 207.1 63.401 A 20.934 20.934 0 0 0 211.352 62.996 Q 215.416 62.153 217.95 59.551 A 18.057 18.057 0 0 0 221.749 53.613 A 24.568 24.568 0 0 0 223 49.401 A 57.057 57.057 0 0 0 223.842 43.87 Q 224.157 40.884 224.255 37.481 A 109.983 109.983 0 0 0 224.3 34.301 A 102.983 102.983 0 0 0 224.117 27.992 Q 223.927 24.896 223.538 22.197 A 52.065 52.065 0 0 0 223 19.101 A 23.971 23.971 0 0 0 221.356 13.966 A 18.079 18.079 0 0 0 217.95 8.901 A 12.044 12.044 0 0 0 212.494 5.695 Q 210.555 5.134 208.225 5.027 A 24.422 24.422 0 0 0 207.1 5.001 A 20.698 20.698 0 0 0 202.796 5.421 Q 200.111 5.992 198.083 7.339 A 11.535 11.535 0 0 0 196.2 8.901 A 18.472 18.472 0 0 0 192.189 15.288 A 24.508 24.508 0 0 0 191.1 19.051 A 55.935 55.935 0 0 0 190.258 24.567 Q 189.972 27.286 189.864 30.369 A 110.164 110.164 0 0 0 189.8 34.201 A 85.823 85.823 0 0 0 190.147 42.183 Q 190.909 50.323 193.35 55.651 A 12.442 12.442 0 0 0 202.216 62.87 A 20.95 20.95 0 0 0 207.1 63.401 Z',
  //R
  'M 249.8 61.201 L 249.8 7.201 A 16.515 16.515 0 0 0 246.923 5.932 Q 244.036 4.95 240 4.501 L 240.5 0.901 L 266.2 0.901 A 43.688 43.688 0 0 1 274.558 1.627 Q 287.942 4.249 289.008 16.338 A 24.632 24.632 0 0 1 289.1 18.501 Q 289.1 25.101 285.75 29.201 Q 282.94 32.641 277.491 34.391 A 30.016 30.016 0 0 1 275.3 35.001 A 11.005 11.005 0 0 1 277.749 37.134 A 13.622 13.622 0 0 1 278.65 38.301 A 24.012 24.012 0 0 1 279.82 40.189 Q 280.669 41.701 281.5 43.601 L 289.4 61.201 A 12.952 12.952 0 0 0 292.11 62.55 Q 294.509 63.436 297.8 63.801 L 297.2 67.601 L 282.1 67.601 L 273.4 45.301 Q 272.092 41.993 271.051 40.224 A 10.907 10.907 0 0 0 270.45 39.301 Q 269.2 37.601 267.2 37.051 A 10.797 10.797 0 0 0 265.954 36.798 Q 264.611 36.596 262.62 36.532 A 62.544 62.544 0 0 0 260.6 36.501 L 258.6 36.501 L 258.6 61.201 A 12.739 12.739 0 0 0 260.046 61.941 Q 261.063 62.386 262.3 62.751 A 23.564 23.564 0 0 0 263.831 63.143 Q 265.688 63.557 268.3 63.901 L 267.8 67.601 L 240.1 67.601 L 240.6 63.901 A 35.411 35.411 0 0 0 244.304 63.266 Q 247.569 62.514 249.8 61.201 Z M 258.6 5.701 L 258.6 31.901 L 261.7 31.901 Q 271.1 31.901 275.6 28.551 A 10.772 10.772 0 0 0 279.724 21.994 A 17.074 17.074 0 0 0 280.1 18.301 A 19.561 19.561 0 0 0 279.753 14.494 Q 279.312 12.274 278.311 10.568 A 9.971 9.971 0 0 0 276.55 8.351 Q 273 5.001 266.1 5.001 Q 262.7 5.001 258.6 5.701 Z',
  //Y
  'M 317.2 61.201 L 317.2 41.101 L 300.2 7.101 A 12.817 12.817 0 0 0 297.462 5.556 Q 295.907 4.903 294 4.501 L 294.5 0.901 L 319.2 0.901 L 318.7 4.501 A 30.511 30.511 0 0 0 314.756 5.284 Q 312.078 6.014 310 7.201 L 322.5 33.301 L 335.3 7.101 A 22.662 22.662 0 0 0 330.401 5.238 A 29.951 29.951 0 0 0 326.4 4.501 L 326.9 0.901 L 348.9 0.901 L 348.3 4.501 Q 344.7 5.201 342.2 7.101 L 326 39.901 L 326 61.201 A 15.52 15.52 0 0 0 328.457 62.281 Q 331.525 63.351 336.2 63.901 L 335.8 67.601 L 307 67.601 L 307.5 63.901 A 63.973 63.973 0 0 0 309.759 63.58 Q 311.525 63.295 312.9 62.951 A 16.783 16.783 0 0 0 316.871 61.385 A 18.843 18.843 0 0 0 317.2 61.201 Z',
]

type LogoTrans = { [key in 'project' | 'theory']?: 'open' | 'close' }[]

const PTLogo: React.FC<{ trans: LogoTrans }> = ({ trans }) => {
  // const [PATH, setPath] = useState(PATH_PR)
  const theme = useTheme<Theme>()
  const isMobile = useUiStore(state => state.isMobile, shallow)
  const [springs, setSprings] = useSprings(8, () => ({
    config: { tension: 500, mass: 1, friction: 30 },
    // from: { y: !isMobile ? 1 : 0 },
    y: 0,
    x: 0,
    opacity: 0 as any,
    path: 'project' as 'project' | 'theory',
  }))

  const project__logo = css({
    stroke: alpha(theme.palette.orange.light, 0.9),
    strokeWidth: '0.4mm',
    fill: 'none',
    position: 'fixed',
    display: 'relative',
    // marginTop: -30
    top: isMobile ? 5 : -30,
    marginLeft: isMobile ? 10 : 60,
    zIndex: 10000,
  })
  const [hovered, setHover] = useState(false)

  // hover animation
  useEffect(() => {
    setSprings(i => ({
      y: hovered ? 30 : 0,
      delay: i * 40,
    }))
  }, [hovered])

  useEffect(() => {
    ;(async () => {
      for (const tr of trans) {
        await setSprings(i => {
          const key = 'project' in tr ? 'project' : 'theory'
          const currTrans = tr[key]
          return {
            x: currTrans === 'open' ? 0 : -300,
            opacity: currTrans === 'open' ? 1 : 0,
            path: key,
            from: {
              x: currTrans === 'open' ? 400 : 0,
              opacity: currTrans === 'open' ? 0 : 1,
            },
            delay: i * 40,
            config: sConfigs.default,
          }
        })
      }
    })()
  }, [trans])

  return (
    <svg
      className="projectLOGO"
      css={project__logo}
      width={isMobile ? '200' : '400'}
      height={isMobile ? '80' : '140'}
      viewBox="0 0 440 110"
      xmlns="http://www.w3.org/2000/svg"
      fillRule="evenodd"
      fontSize="10pt"
      onMouseOver={() => {
        setHover(true)
      }}
      onMouseLeave={() => {
        setHover(false)
      }}
      //   stroke={theme.palette.red.base}
      //   strokeWidth="0.25mm
    >
      <g className="projects">
        {springs.map(({ path, ...style }, idx: number) => {
          return <Apath path={path} {...style} index={idx} key={idx} />
        })}
      </g>
    </svg>
  )
}

const Path: React.FC<{
  x: number
  y: number
  path: 'project' | 'theory'
  index: number
  opacity: number
}> = ({ x, y, opacity, path, index }) => {
  return (
    <g
      style={{
        transform: `translate(${x}px,${y}px)`,
        opacity,
      }}
    >
      <path
        className={'svg_letter'}
        d={path === 'project' ? PATH_PR[index] : PATH_TH[index]}
      />
    </g>
  )
}
const Apath = a(Path)

export default PTLogo
